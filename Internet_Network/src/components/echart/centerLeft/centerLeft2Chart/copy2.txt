<template>
  <div id="worldMap">
    <Echart
      id="centreLeft2Chart"
      ref="centreLeft2ChartRef"
      :options="option"
      height="11.5rem"
      width="13rem"
    ></Echart>
  </div>
</template>

<script>
import Echart from "@/common/echart";
// import world from 'echarts/map/json/world.json';
import world from "../../../../common/map/world.json";
echarts.registerMap("world", world);
import echarts from "echarts";
import {geoCoordMap} from "../../../../common/map/worldlocation.js";
import getDependent from "../../../../common/map/json/dependent.json"
export default {
  data() {
    return {
      options: {}
    };
  },
  components: {
    Echart,
  },
  props: {
    cdata: {
      type: Array,
      default: () => [],
    },
  },
  watch: {
    cdata: {
      handler() {
        console.log("get the json file");
        var dependent = getDependent;
        var points = [];
        var countArray = [];
        var usCountArray = [];
        var nameArray = [];
        var usArray = [];
        var usPoints = [];
        // console.log(getDependent)
        // console.log(geoCoordMap)
        for (var i = 0; i < dependent.length; i++) {
          var link = dependent[i].link;
          var count = dependent[i].count;
          
          var pro_country_pos = [
            Number(geoCoordMap[link[0]][1]),
            Number(geoCoordMap[link[0]][0]),
          ];
          
          var dep_country_pos = [
            Number(geoCoordMap[link[1]][1]),
            Number(geoCoordMap[link[1]][0]),
          ];
          if (link[0] === "us" || link[1] === "us") {
            usPoints.push(pro_country_pos, dep_country_pos);
            usCountArray.push(count);
            usArray.push(link);
          } else {
            points.push(pro_country_pos, dep_country_pos);
            countArray.push(count);
            nameArray.push(link);
          }
        }
        console.log("1");

        var series = [];
        for (i = 0; i < points.length / 2; i++) {
          var data_tmp = [points[i * 2], points[i * 2 + 1]];
          var line = [];
          line.push({
            coords: data_tmp,
            name: nameArray[i] + ": " + countArray[i],
          });
          series.push({
            name: "dependent",
            type: "lines",
            coordinateSystem: "geo",
            selectedMode: "single",
            symbolSize: 10,
            itemStyle: {
              normal: { label: { show: true } },
              emphasis: { label: { show: true } },
            },
            lineStyle: {
              normal: {
                color: echarts.color.modifyHSL(
                  "#5A94DF",
                  Math.round(countArray[i] / 10)
                ),
                width: 1,
                opacity: 0.6,
                curveness: 0.1,
              },
            },
            label: {
              show: true,
              position: "right",
              formatter: "{b}",
            },
            data: line,
            progressiveThreshold: 500,
            progressive: 200,
            zlevel: 2,
          });
        }

        for (i = 0; i < usPoints.length / 2; i++) {
          var data_tmp_us = [usPoints[i * 2], usPoints[i * 2 + 1]];
          var line_us = [];
          line_us.push({
            coords: data_tmp_us,
            name: usArray[i] + ": " + usCountArray[i],
          });
          series.push({
            name: "dependent_us",
            type: "lines",
            coordinateSystem: "geo",
            symbolSize: 10,
            itemStyle: {
              normal: { label: { show: true } },
              emphasis: { label: { show: true } },
            },
            lineStyle: {
              normal: {
                color: echarts.color.modifyHSL(
                  "#3A24DF",
                  Math.round(usCountArray[i] / 40)
                ),
                width: 1,
                opacity: 0.6,
                curveness: 0.1,
              },
            },
            label: {
              show: true,
              position: "right",
              formatter: "{b}",
            },
            data: line_us,
            progressiveThreshold: 500,
            progressive: 200,
            zlevel: 2,
          });
        }

        this.option = {
          baseOption: {
            timeline: {
              axisType: "category",
              show: true,
              data: ["1"],
              bottom: "10%",
              autoPlay: false,
              playInterval: 1000,
            },
          },
          options: [
            {
              title: {
                text: "World OSS Map",
                x: "center",
                t: "top",
                textAlign: "left",
              },
              tooltip: {
                trigger: "item",
                formatter: function (a) {
                  return a[2];
                },
              },
              legend: {
                trigger: "vertical",
                x: "right",
              },
              roamController: {
                show: true,
                x: "right",
                mapTypeControl: {
                  world: true,
                },
              },

              geo: {
                map: "world",
                roam: true,
                label: {
                  show: false,
                },
                itemStyle: {
                  areaColor: "#323c48",
                  borderColor: "#111",
                },
                emphasis: {
                  itemStyle: {
                    areaColor: "#2a333d",
                  },
                },
              },
              series: series,
              // series: [
              //   {
              //     title: "世界地图",
              //     type: "map",
              //     aspectScale: 0.85, //长宽比
              //     zoom: 1.3,
              //     mapType: "world", // 自定义扩展图表类型
              //     top: "24%",
              //     left: "14%",
              //     itemStyle: {
              //       normal: {
              //         color: "red",
              //         areaColor: "rgba(19,54,162, .5)",
              //         borderColor: "rgba(0,242,252,.3)",
              //         borderWidth: 1,
              //         shadowBlur: 7,
              //         shadowColor: "#00f2fc",
              //       },
              //       emphasis: {
              //         areaColor: "#4f7fff",
              //         borderColor: "rgba(0,242,252,.6)",
              //         borderWidth: 2,
              //         shadowBlur: 10,
              //         shadowColor: "#00f2fc",
              //       },
              //     },
              //     label: {
              //       formatter: (params) => `${params.name}`,
              //       show: false,
              //       position: "insideRight",
              //       textStyle: {
              //         fontSize: 14,
              //         color: "#efefef",
              //       },
              //       emphasis: {
              //         textStyle: {
              //           color: "#fff",
              //         },
              //       },
              //     },
              //     data: [],
              //   },
              // ],
            },
          ],
        };
        // 重新选择区域
        this.handleMapRandomSelect();
      },
      immediate: true,
      deep: true,
    },
  },
  methods: {},
};
</script>
